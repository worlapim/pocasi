@using Pocasi.Models
@model SearchViewModel
@using Pocasi.Properties
@{
    ViewData["Title"] = "Home Page";
    var isLocationDisplayed = Model.Root != null;
}

<div class="search-box@(isLocationDisplayed ? "" : " search-box_big")">
    <div class="@(isLocationDisplayed ? "" : "title_big")">
        <h1>@Resources.AppName</h1>
    </div>
    <label>
        @Resources.Location:
        <input name=locations list=locations
                onchange="SearchChanged()"
                value="@Model.Location"
                id="location-input"
               class="search-input@(isLocationDisplayed ? "" : " search-input_big")">
        <datalist id="locations">
            @{
                foreach(var location in Model?.Locations??new List<string>())
                {
                    <option value="@location"/>
                }
            }
        </datalist>
    </label>
</div>
<div class="table-container">
    <table class="table">
        @{
            var tableLength = Model?.Root?.List.Count() ?? 0;
            var now = DateTime.Now;
            for (var i = 0; i < tableLength; i++)
            {
                <tr class="table-row">
                    <th class="table-cell" style="width:30%; text-align: right;"><time id="@($"time{i}")"></time></th>
                    <th class="table-cell">@(Model?.Root?.List[i]?.Main?.Temp)°C</th>
                </tr>
            }
        }
    </table>
</div>


<script>
    function SearchChanged()
    {
        window.location.href = "./home?search=" + document.getElementById("location-input").value;
    }


    Date.prototype.addHours = function(h) {
        const oldDay = this.getDate();
        this.setTime(this.getTime() + (h*60*60*1000));
        const newDay = this.getDate();
        return oldDay != newDay;
    }

    const time = new Date();
    time.addHours(-3);
    @{
        for (var i = 0; i < tableLength; i++)
        {
            <text>
                newDay = time.addHours(3) || @(i) == 0;
                element = document.getElementById("@($"time{i}")");
                console.log(newDay);
                if (newDay){
                    console.log(newDay);
                    txt = document.createTextNode(time.toLocaleDateString(undefined, {
                                year: "numeric",
                                month: "short",
                                day: "numeric",
                                hour: "2-digit",
                                minute: "2-digit" }));
                }
                else{
                    txt = document.createTextNode(time.toLocaleTimeString(undefined, {
                                hour: "2-digit",
                                minute: "2-digit" }));
                }
                element.appendChild(txt);
            </text>
        }
    }
</script>